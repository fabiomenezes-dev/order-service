version: '2'
services:
  redis:
    image: redis:7.2-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - ./redis_data:/data
  db-postgres:
    image: postgres:15.3-alpine
    container_name: db-postgres-order
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: order_db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    healthcheck: # Adiciona healthcheck para postgres
      test: [ "CMD-SHELL", "pg_isready -U postgres -d order_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
  order-service:
    image: openjdk:21
    container_name: order-service
    restart: always
    volumes:
      - "./public/:/public"
      - "./jar/output-order-service.jar:/output-order-service.jar"
    environment:
      - "TZ=America/Sao_Paulo"
      - "SPRING_PROFILES_ACTIVE=prod"
      - "DB_HOST=db-postgres"
      - "DB_PORT=5432"
    entrypoint:
      - "java"
      - "-Dlog4j2.formatMsgNoLookups=true"
      - "-jar"
      - "-Xms300m"
      - "-Xmx756m"
      - "output-order-service.jar"
    ports:
      - 8080:8080
    depends_on:
      db-postgres:
        condition: service_healthy
      redis:
        condition: service_started

